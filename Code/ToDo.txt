MARIA (DONE) -funcao de input para o jogador passar
MARIA (DONE) -funcao para trocar a peça de cima
-menu inicial onde se escolhe o tamanho da board
SENA e MARIA (em progresso)-verificacao de final de jogo --- game_over(+GameState, -Winner)
SENA e MARIA (em progresso)-verificar quem ganhou
-juntar funcoes na game loop
Maria (done)-ver lista de jogadas validas  --- valid_moves(+GameState, +Player, -ListOfMoves)
-implementar GameState
-opcao de voltar atras a meio de input (opcional)

Perguntar ao professor:
    -Avaliação do tabuleiro?
    -Lista de jogadas válidas?








    
getValue(Board,Player,ReturnValue,Value,CurrColumn,CurrRow):-

    length(Board, Size),
    write(CurrColumn-CurrRow-Size), write('\n'),
    write('Row>\n'),
    CurrRow>=0,
    
    

    getCellColor(Board,CurrColumn,CurrRow,Color),
    Color \= visited,
    Color = Player,
    Aux is CurrRow,
    replaceValue(Board,NewBoard,CurrColumn,Aux,Player),
    write(NewBoard), write('\n'),
    NewValue is Value + 1,

    /*up movement*/
    NewRow is CurrRow - 1,
    getValue(NewBoard, Player, ReturnValue,NewValue, CurrColumn, NewRow),
    
    ReturnValue is NewValue.

getValue(Board,Player,ReturnValue,Value,CurrColumn,CurrRow):-

    length(Board, Size),
    write(CurrColumn-CurrRow-Size), write('\n'),
    write('Row<\n'),
    CurrRow<Size,
    
    getCellColor(Board,CurrColumn,CurrRow,Color),
    Color \= visited,
    Color = Player,
    replaceValue(Board,NewBoard,CurrColumn,CurrRow,Player),
    write(NewBoard), write('\n'),
    NewValue is Value + 1,
    
    /*down movement*/
    NewRow is CurrRow + 1,
    getValue(NewBoard, Player, ReturnValue,NewValue, CurrColumn, NewRow),

    ReturnValue is NewValue.


getValue(Board,Player,ReturnValue,Value,CurrColumn,CurrRow):-

    length(Board, Size),
    write(CurrColumn-CurrRow-Size), write('\n'),
    write('Col<\n'),
    CurrColumn<Size,

    getCellColor(Board,CurrColumn,CurrRow,Color),
    Color \= visited,
    Color = Player,
    replaceValue(Board,NewBoard,CurrColumn,CurrRow,Player),
    write(NewBoard), write('\n'),
    NewValue is Value + 1,
    
    /*right movement*/
    NewColumn is CurrColumn + 1,
    getValue(NewBoard, Player, ReturnValue,NewValue, NewColumn, CurrRow),

    ReturnValue is NewValue.


getValue(Board,Player,ReturnValue,Value,CurrColumn,CurrRow):-


    length(Board, Size),
    write(CurrColumn-CurrRow-Size), write('\n'),
    write('Col>\n'),
    (CurrColumn<0,trace;true),
    CurrColumn>=0,

    getCellColor(Board,CurrColumn,CurrRow,Color),
    Color \= visited,
    Color = Player,
    replaceValue(Board,NewBoard,CurrColumn,CurrRow,Player),
    write(NewBoard), write('\n'),
    NewValue is Value + 1,
 
    /*left movement*/
    NewColumn is CurrColumn - 1,
    getValue(NewBoard, Player, ReturnValue,NewValue, NewColumn, CurrRow),
  
    ReturnValue is NewValue.
    